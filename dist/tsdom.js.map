{"version":3,"sources":["../src/tsdom.ts"],"names":["preventDefault","ev","returnValue","DOM","qry","ctx","meta","els","this","document","regex","query","nodeType","window","length","len","prototype","find","owner","css","obj","each","el","key","val","style","setProperty","cb","i","call","hasClass","str","result","value","className","replace","indexOf","addClass","_this","removeClass","reg","RegExp","on","addEventListener","off","removeEventListener","test","match","doc","exec","getElementsByClassName","getElementsByTagName","getElementById","querySelectorAll","exports","default"],"mappings":"aA4PA,SAAAA,eAA+BC,GAE5B,OAAIA,EAAGD,eAEGC,EAAGD,iBAINC,EAAGC,aAAc,yDAtO3B,IAAAC,IAAA,WAYG,SAAAA,EAAmBC,EAA2BC,EAAeC,GAE1D,IAAIC,EAgBJ,GAdAC,KAAKC,SAAWA,SAChBD,KAAKF,KAAOA,MACZE,KAAKE,MAAQ,qCAIVH,EAFe,iBAARH,EAEDI,KAAKG,MAAMP,EAAKC,GAAYI,UAI5BL,GAIC,OAAOI,KAEjB,GAAqB,IAAjBD,EAAIK,UAAkBL,IAAQM,OAE/BL,KAAK,GAAKD,EACVC,KAAKM,OAAS,OAId,IACG,IAAIC,EAAOP,KAAKM,OAASP,EAAIO,OAC7BC,IACAP,KAAKO,GAAOR,EAAIQ,KA2K5B,OAnKUZ,EAAAa,UAAAC,KAAP,SAAab,GAEV,OAAO,IAAID,EAAIC,EAAKI,KAAK,IAAMU,MAAOV,QAKlCL,EAAAa,UAAAG,IAAP,SAAWC,GAgBR,OAZAZ,KAAKa,KAAK,SAAAC,GAEP,IAAI,IAAIC,KAAOH,EAAK,CAEjB,IAAMI,EAAMJ,EAAIG,GAEhBD,EAAGG,MAAMC,YAAYH,EAAKC,MAMzBhB,MAKHL,EAAAa,UAAAK,KAAP,SAAaM,GAEV,IAAI,IAAIC,EAAI,EAAGb,EAAMP,KAAKM,OAAQc,EAAIb,GAAM,CAEnBP,KAAKoB,GAE3B,GAAkC,GAA/BD,EAAGE,KAAKrB,KAAMA,KAAKoB,GAAIA,KACvB,MAKN,OAAOpB,MAKHL,EAAAa,UAAAc,SAAP,SAAgBC,GAEb,IAAIC,GAAS,EAeb,OAbAxB,KAAKa,KAAK,SAAAC,GAEP,IAAMW,EAAQ,IAAIF,EAAG,KACN,IAAIT,EAAGY,UAAS,KAAKC,QAAQ,UAAW,KAE9CC,QAAQH,IAAU,IAExBD,GAAS,KAMRA,GAKH7B,EAAAa,UAAAqB,SAAP,SAAgBN,GAAhB,IAAAO,EAAA9B,KAYG,OAVAA,KAAKa,KAAK,SAAAC,GAEHgB,EAAKR,SAASC,KAEfT,EAAGY,WAAa,IAAMH,KAMrBvB,MAKHL,EAAAa,UAAAuB,YAAP,SAAmBR,GAAnB,IAAAO,EAAA9B,KAcG,OAZAA,KAAKa,KAAK,SAAAC,GAEP,GAAGgB,EAAKR,SAASC,GAAM,CAEpB,IAAIS,EAAM,IAAIC,OAAO,UAAYV,EAAM,WAEvCT,EAAGY,UAAYZ,EAAGY,UAAUC,QAAQK,EAAK,QAMxChC,MAKHL,EAAAa,UAAA0B,GAAP,SAAWzC,EAAY0B,GAQpB,OANAnB,KAAKa,KAAK,SAAAC,GAEPA,EAAGqB,iBAAiB1C,EAAI0B,KAIpBnB,MAKHL,EAAAa,UAAA4B,IAAP,SAAY3C,EAAY0B,GAQrB,OANAnB,KAAKa,KAAK,SAAAC,GAEPA,EAAGuB,oBAAoB5C,EAAI0B,KAIvBnB,MAKFL,EAAAa,UAAAL,MAAR,SAAcP,EAAaC,GAExB,IAEIyC,EACAC,EAHEC,EAAMxC,KAAKC,SAKjB,GAAKqC,EAAOtC,KAAKE,MAAMuC,KAAK7C,GAAO,CAEhC,GAAK2C,EAAQD,EAAK,GAEf,OAAOzC,EAAI6C,uBAAuBH,GAIrC,GAAKA,EAAQD,EAAK,GAEf,OAAOzC,EAAI8C,qBAAqBJ,GAInC,GAAKA,EAAQD,EAAK,GAEf,OAAOE,EAAII,eAAeL,GAMhC,OAAO1C,EAAIgD,iBAAiBjD,IAKlCD,KArNamD,QAAAnD,IAAAA,IA8NbmD,QAAAtD,eAAAA,eAmBAsD,QAAAC,QAAe,SAACnD,EAA2BC,GAExC,OAAO,IAAIF,IAAIC,EAAKC","file":"tsdom.js","sourcesContent":["\r\n\r\n/* -----------------------------------\r\n *\r\n * Meta\r\n *\r\n * -------------------------------- */\r\n\r\ninterface IMeta {\r\n   owner?: DOM;\r\n}\r\n\r\n\r\n/* -----------------------------------\r\n *\r\n * IDom\r\n *\r\n * -------------------------------- */\r\n\r\nexport interface IDom {\r\n   (qry: string | HTMLElement, ctx?: HTMLElement): DOM;\r\n}\r\n\r\n\r\n/* -----------------------------------\r\n *\r\n * DOM\r\n *\r\n * -------------------------------- */\r\n\r\nexport class DOM {\r\n\r\n\r\n   [index: number]: HTMLElement;\r\n\r\n\r\n   document: Document;\r\n   meta: IMeta;\r\n   regex: RegExp;\r\n   length: number;\r\n\r\n\r\n   public constructor(qry: string | HTMLElement, ctx?: Element, meta?: IMeta) {\r\n\r\n      let els: any;\r\n\r\n      this.document = document;\r\n      this.meta = meta || {};\r\n      this.regex = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/;\r\n\r\n      if(typeof qry === 'string') {\r\n\r\n         els = this.query(qry, ctx ? ctx : document);\r\n\r\n      } else {\r\n\r\n         els = qry;\r\n\r\n      }\r\n\r\n      if (!els) return this\r\n\r\n      if (els.nodeType === 1 || els === window) {\r\n         \r\n         this[0] = els;\r\n         this.length = 1\r\n    \r\n      } else {\r\n\r\n         for (\r\n            let len = (this.length = els.length);\r\n            len--;\r\n            this[len] = els[len]\r\n         );\r\n\r\n      }\r\n\r\n   }\r\n\r\n\r\n   public find (qry: string) {\r\n\r\n      return new DOM(qry, this[0], { owner: this });\r\n\r\n   }\r\n\r\n\r\n   public css(obj: { [key: string]: string }) {\r\n\r\n      const self = this;\r\n\r\n      this.each(el => {\r\n\r\n         for(let key in obj) {\r\n\r\n            const val = obj[key];\r\n\r\n            el.style.setProperty(key, val);\r\n\r\n         }\r\n\r\n      });\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n\r\n   public each (cb: (el: HTMLElement) => void) {\r\n\r\n      for(let i = 0, len = this.length; i < len;) {\r\n\r\n         let el: HTMLElement = this[i];\r\n\r\n         if(cb.call(this, this[i], i++) == false) {\r\n            break;\r\n         }\r\n\r\n      }\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n\r\n   public hasClass(str: string) {\r\n\r\n      let result = false;\r\n\r\n      this.each(el => {\r\n\r\n         const value = ` ${str} `;\r\n         const clean = (` ${el.className} `).replace(/[\\n\\t]/g, ' ');\r\n\r\n         if(clean.indexOf(value) > -1) {\r\n\r\n            result = true;\r\n\r\n         }\r\n\r\n      });\r\n\r\n      return result;\r\n\r\n   }\r\n\r\n\r\n   public addClass(str: string) {\r\n\r\n      this.each(el => {\r\n\r\n         if(!this.hasClass(str)) {\r\n\r\n            el.className += ' ' + str;\r\n\r\n         }\r\n\r\n      });\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n\r\n   public removeClass(str: string) {\r\n\r\n      this.each(el => {\r\n\r\n         if(this.hasClass(str)) {\r\n\r\n            var reg = new RegExp('(\\\\s|^)' + str + '(\\\\s|$)');\r\n\r\n            el.className = el.className.replace(reg, ' ');\r\n\r\n         }\r\n\r\n      });\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n\r\n   public on (ev: string, cb: EventListener) {\r\n\r\n      this.each(el => {\r\n\r\n         el.addEventListener(ev, cb);\r\n\r\n      });\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n   \r\n   public off (ev: string, cb: EventListener) {\r\n\r\n      this.each(el => {\r\n\r\n         el.removeEventListener(ev, cb);\r\n\r\n      });\r\n\r\n      return this;\r\n\r\n   }\r\n\r\n\r\n   private query(qry: string, ctx: Element | Document) {\r\n\r\n      const doc = this.document;\r\n\r\n      let test;\r\n      let match;\r\n\r\n      if ((test = this.regex.exec(qry))) {\r\n\r\n         if ((match = test[3])) {\r\n\r\n            return ctx.getElementsByClassName(match);\r\n\r\n         }\r\n\r\n         if ((match = test[2])) {\r\n\r\n            return ctx.getElementsByTagName(match);\r\n\r\n         }\r\n\r\n         if ((match = test[1])) {\r\n\r\n            return doc.getElementById(match);\r\n\r\n         }\r\n\r\n      }\r\n\r\n      return ctx.querySelectorAll(qry);\r\n\r\n   }\r\n\r\n\r\n}\r\n\r\n\r\n/* -----------------------------------\r\n *\r\n * preventDefault\r\n *\r\n * -------------------------------- */\r\n\r\nexport function preventDefault(ev: Event) {\r\n\r\n   if (ev.preventDefault) {\r\n\r\n      return ev.preventDefault();\r\n      \r\n   }\r\n\r\n   return ev.returnValue = false;\r\n\r\n}\r\n\r\n\r\n/* -----------------------------------\r\n *\r\n * Export\r\n *\r\n * -------------------------------- */\r\n\r\nexport default (qry: string | HTMLElement, ctx?: HTMLElement) => {\r\n\r\n   return new DOM(qry, ctx);\r\n   \r\n};"]}