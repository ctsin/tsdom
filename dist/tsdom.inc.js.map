{"version":3,"sources":["tsdom.inc.js"],"names":["f","exports","module","define","amd","window","global","self","this","tsdom","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Object","defineProperty","value","index_1","delegate","scope","query","cb","ev","el","hit","Instance","each","_el","test","target","parentNode","../index","2","direct","currentTarget","3","registry_1","registry","direct_1","delegate_1","./delegate","./direct","./registry","4","Registry","list","prototype","find","filter","_ev","type","add","push","remove","5","default","./index","6","utility","event","qry","ctx","meta","els","events","document","nodeType","len","owner","closest","match","querySelectorAll","item","parentElement","css","obj","key","val","style","setProperty","attr","getAttribute","_i","_a","keys","setAttribute","hasClass","str","result","addClass","className","removeClass","reg","RegExp","replace","toggleClass","on","op1","op2","undefined","addEventListener","handler","off","forEach","removeEventListener","text","innerText","innerHTML","data","html","append","insertAdjacentHTML","appendChild","prepend","insertBefore","firstChild","empty","removeChild","toArray","array","./event","./utility","7","indexOf","8","__export","m","p","hasOwnProperty","./hasClass","./query","9","regex","exec","getElementsByClassName","getElementsByTagName","getElementById"],"mappings":"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","file":"tsdom.inc.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.tsdom = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar index_1 = require(\"../index\");\r\n/* -----------------------------------\r\n *\r\n * Delegate\r\n *\r\n * -------------------------------- */\r\nfunction delegate(scope, query, cb) {\r\n    return function (ev) {\r\n        var $elements = new index_1.Instance(query, scope);\r\n        var el = null;\r\n        var hit = false;\r\n        $elements.each(function (_el) {\r\n            var test = ev.target;\r\n            if (test == _el) {\r\n                hit = true;\r\n                el = test;\r\n                return;\r\n            }\r\n            while (test && test !== scope) {\r\n                test = test.parentNode;\r\n                if (test == _el) {\r\n                    hit = true;\r\n                    el = test;\r\n                }\r\n            }\r\n        });\r\n        if (hit) {\r\n            cb(ev, el);\r\n        }\r\n    };\r\n}\r\nexports.delegate = delegate;\r\n},{\"../index\":6}],2:[function(require,module,exports){\n\"use strict\";\r\n/* -----------------------------------\r\n *\r\n * Direct\r\n *\r\n * -------------------------------- */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction direct(cb) {\r\n    return function (ev) {\r\n        var el = ev.currentTarget;\r\n        cb(ev, el);\r\n    };\r\n}\r\nexports.direct = direct;\r\n},{}],3:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar registry_1 = require(\"./registry\");\r\nexports.registry = registry_1.registry;\r\nvar direct_1 = require(\"./direct\");\r\nexports.direct = direct_1.direct;\r\nvar delegate_1 = require(\"./delegate\");\r\nexports.delegate = delegate_1.delegate;\r\n},{\"./delegate\":1,\"./direct\":2,\"./registry\":4}],4:[function(require,module,exports){\n\"use strict\";\r\n/* -----------------------------------\r\n *\r\n * IEvents\r\n *\r\n * -------------------------------- */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* -----------------------------------\r\n *\r\n * Registry\r\n *\r\n * -------------------------------- */\r\nvar Registry = /** @class */ (function () {\r\n    function Registry() {\r\n        this.list = [];\r\n    }\r\n    Registry.prototype.find = function (ev) {\r\n        var list = this.list;\r\n        return list.filter(function (_ev) { return _ev.type === ev; });\r\n    };\r\n    Registry.prototype.add = function (ev) {\r\n        this.list.push(ev);\r\n    };\r\n    Registry.prototype.remove = function (ev) {\r\n        var list = this.list;\r\n        this.list = list.filter(function (_ev) { return _ev.type !== ev; });\r\n    };\r\n    return Registry;\r\n}());\r\nexports.Registry = Registry;\r\n/* -----------------------------------\r\n *\r\n * Function\r\n *\r\n * -------------------------------- */\r\nfunction registry() {\r\n    return new Registry();\r\n}\r\nexports.registry = registry;\r\n},{}],5:[function(require,module,exports){\nmodule.exports = require('./index').default;\n},{\"./index\":6}],6:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utility = require(\"./utility\");\r\nvar event = require(\"./event\");\r\n/* -----------------------------------\r\n *\r\n * Instance\r\n *\r\n * -------------------------------- */\r\nvar Instance = /** @class */ (function () {\r\n    function Instance(qry, ctx, meta) {\r\n        var els;\r\n        this.meta = meta || {};\r\n        this.events = event.registry();\r\n        if (typeof qry === 'string') {\r\n            els = utility.query(qry, ctx ? ctx : document);\r\n        }\r\n        else {\r\n            els = qry;\r\n        }\r\n        if (!els)\r\n            return this;\r\n        if (els.nodeType === 1 || els === window) {\r\n            this[0] = els;\r\n            this.length = 1;\r\n        }\r\n        else {\r\n            for (var len = (this.length = els.length); len--; this[len] = els[len])\r\n                ;\r\n        }\r\n    }\r\n    Instance.prototype.find = function (qry) {\r\n        return new Instance(qry, this[0], { owner: this });\r\n    };\r\n    Instance.prototype.closest = function (qry) {\r\n        var match = document.querySelectorAll(qry);\r\n        var el = this[0];\r\n        var i;\r\n        do {\r\n            i = match.length;\r\n            while (--i >= 0 && match.item(i) !== el) { }\r\n            ;\r\n        } while ((i < 0) && (el = el.parentElement));\r\n        return new Instance(el);\r\n    };\r\n    Instance.prototype.each = function (cb) {\r\n        for (var i = 0, len = this.length; i < len;) {\r\n            var el = this[i];\r\n            if (cb.call(this, this[i], i++) == false) {\r\n                break;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Instance.prototype.css = function (obj) {\r\n        this.each(function (el) {\r\n            for (var key in obj) {\r\n                var val = obj[key];\r\n                el.style.setProperty(key, val);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.attr = function (obj) {\r\n        if (typeof obj === 'string') {\r\n            var value = this[0].getAttribute(obj);\r\n            return value;\r\n        }\r\n        this.each(function (el) {\r\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                var val = obj[key];\r\n                el.setAttribute(key, val);\r\n            }\r\n        });\r\n    };\r\n    Instance.prototype.hasClass = function (str) {\r\n        var result = false;\r\n        this.each(function (el) {\r\n            result = utility.hasClass(el, str);\r\n        });\r\n        return result;\r\n    };\r\n    Instance.prototype.addClass = function (str) {\r\n        this.each(function (el) {\r\n            var state = utility.hasClass(el, str);\r\n            if (!state) {\r\n                el.className += ' ' + str;\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.removeClass = function (str) {\r\n        this.each(function (el) {\r\n            var state = utility.hasClass(el, str);\r\n            if (state) {\r\n                var reg = new RegExp('(\\\\s|^)' + str + '(\\\\s|$)');\r\n                el.className = el.className.replace(reg, '');\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.toggleClass = function (str) {\r\n        if (this.hasClass(str)) {\r\n            this.removeClass(str);\r\n        }\r\n        else {\r\n            this.addClass(str);\r\n        }\r\n        return this;\r\n    };\r\n    Instance.prototype.on = function (ev, op1, op2) {\r\n        var events = this.events;\r\n        var direct = typeof op1 === 'function' && op2 === undefined;\r\n        var delegate = typeof op1 === 'string' && typeof op2 === 'function';\r\n        this.each(function (el) {\r\n            var cb = null;\r\n            if (direct) {\r\n                cb = event.direct(op1);\r\n            }\r\n            if (delegate) {\r\n                cb = event.delegate(el, op1, op2);\r\n            }\r\n            if (cb) {\r\n                el.addEventListener(ev, cb, true);\r\n                events.add({\r\n                    type: ev,\r\n                    handler: cb\r\n                });\r\n            }\r\n            else {\r\n                throw new Error('TSDom.on: Invalid Arguments');\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.off = function (ev) {\r\n        var events = this.events;\r\n        this.each(function (el) {\r\n            var items = events.find(ev);\r\n            items.forEach(function (item) {\r\n                if (item !== undefined) {\r\n                    el.removeEventListener(ev, item.handler, true);\r\n                }\r\n            });\r\n        });\r\n        events.remove(ev);\r\n        return this;\r\n    };\r\n    Instance.prototype.text = function (val) {\r\n        if (val == undefined) {\r\n            return this[0].innerText;\r\n        }\r\n        this.each(function (el) {\r\n            el.innerHTML = val;\r\n        });\r\n        return val;\r\n    };\r\n    Instance.prototype.data = function (key, val) {\r\n        if (val == undefined) {\r\n            return this[0].getAttribute(\"data-\" + key);\r\n        }\r\n        this.each(function (el) {\r\n            el.setAttribute(\"data-\" + key, val);\r\n        });\r\n        return val;\r\n    };\r\n    Instance.prototype.html = function (val) {\r\n        if (val == undefined) {\r\n            return this[0].innerHTML;\r\n        }\r\n        this.each(function (el) {\r\n            el.innerHTML = val;\r\n        });\r\n        return val;\r\n    };\r\n    Instance.prototype.append = function (item) {\r\n        this.each(function (el) {\r\n            if (typeof item === 'string') {\r\n                return el.insertAdjacentHTML('beforeend', item);\r\n            }\r\n            el.appendChild(item);\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.prepend = function (item) {\r\n        this.each(function (el) {\r\n            if (typeof item === 'string') {\r\n                return el.insertAdjacentHTML('afterbegin', item);\r\n            }\r\n            el.insertBefore(item, el.firstChild);\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.empty = function () {\r\n        this.each(function (el) {\r\n            while (el.firstChild) {\r\n                el.removeChild(el.firstChild);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    Instance.prototype.remove = function () {\r\n        this.each(function (el) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n    };\r\n    Instance.prototype.toArray = function () {\r\n        var array = [];\r\n        this.each(function (el) {\r\n            array.push(el);\r\n        });\r\n        return array;\r\n    };\r\n    return Instance;\r\n}());\r\nexports.Instance = Instance;\r\n/* -----------------------------------\r\n *\r\n * Constructor\r\n *\r\n * -------------------------------- */\r\nexports.default = function (qry, ctx) { return new Instance(qry, ctx); };\r\n},{\"./event\":3,\"./utility\":8}],7:[function(require,module,exports){\n\"use strict\";\r\n/* -----------------------------------\r\n *\r\n * hasClass\r\n *\r\n * -------------------------------- */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction hasClass(el, str) {\r\n    var result = false;\r\n    var value = \" \" + str + \" \";\r\n    var clean = (\" \" + el.className + \" \").replace(/[\\n\\t]/g, ' ');\r\n    if (clean.indexOf(value) > -1) {\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\nexports.hasClass = hasClass;\r\n},{}],8:[function(require,module,exports){\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./query\"));\r\n__export(require(\"./hasClass\"));\r\n},{\"./hasClass\":7,\"./query\":9}],9:[function(require,module,exports){\n\"use strict\";\r\n/* -----------------------------------\r\n *\r\n * Variables\r\n *\r\n * -------------------------------- */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar regex = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/;\r\n/* -----------------------------------\r\n *\r\n * Query\r\n *\r\n * -------------------------------- */\r\nfunction query(qry, ctx) {\r\n    var test;\r\n    var match;\r\n    if ((test = regex.exec(qry))) {\r\n        if ((match = test[3])) {\r\n            return ctx.getElementsByClassName(match);\r\n        }\r\n        if ((match = test[2])) {\r\n            return ctx.getElementsByTagName(match);\r\n        }\r\n        if ((match = test[1])) {\r\n            return document.getElementById(match);\r\n        }\r\n    }\r\n    return ctx.querySelectorAll(qry);\r\n}\r\nexports.query = query;\r\n},{}]},{},[5])(5)\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}